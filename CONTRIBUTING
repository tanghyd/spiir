# Development Guide for Contributors

## Documentation

### Google Style Guide

We recommend all Python code should follow the [Google Python style guide].
Likewise, Python docstrings should follow the style and order of sections shown in the [Google docstring style] examples.

### Automated Hosted Documentation

We aim to setup automated documentation generated by MkDocs with `genmkdocs`, hosted on GitHub Pages.
Note that `genmkdocs` reports to be only compatible with docstrings in the [Google docstring style].

## Testing

### Pre-commit Git Hooks

This repository uses [pre-commit] to ensure that code standards are met in regard to
formatting and style. After installing pre-commit in a virtual environment, we can then
setup pre-commit for the repository with `pre-commit install`. After this point,
pre-commit will run checks on the code repository at every commit.
To check every file in the repository, we can run `pre-commit run --all-files`.

For example, we can configure checks to ensure all Python code is formatted according to
the style of [Black], and that all markdown text is also formatted properly (with code
snippets inside docstrings also matching Black's style with mdformat-black).
We also add configuration files in pyproject.toml and setup.cfg that ensure [isort] and
[flake8] run matching Black's configuration.
There are also a number of standard pre-commit hooks that check valid XML, YAML, JSON
file types, check for accidental merge conflict text, unnecessary whitespace, and
missing end of file new lines.

<!-- # References -->

[black]: https://black.readthedocs.io/en/stable/1
[flake8]: https://flake8.pycqa.org/en/latest/
[google docstring style]: https://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html
[google python style guide]: https://google.github.io/styleguide/pyguide.html
[isort]: https://pycqa.github.io/isort/
[pre-commit]: https://pre-commit.com/
